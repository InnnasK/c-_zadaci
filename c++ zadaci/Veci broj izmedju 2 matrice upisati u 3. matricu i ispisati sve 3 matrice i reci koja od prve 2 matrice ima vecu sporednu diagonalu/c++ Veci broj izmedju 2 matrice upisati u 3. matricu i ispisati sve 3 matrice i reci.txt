#include <iostream>

using namespace std;

/*
Veci broj izmedju 2 matrice upisati u 3. matricu i ispisati sve 3 matrice i reci koja od prve 2 matrice ima vecu sporednu diagonalu
*/

const int MAX_ROWS = 10;
const int MAX_COLS = 10;

int getRandomValue(int from, int to) {
    return  rand() % (to - from + 1) + from;
}

void setRandomValues(int matrix[][MAX_COLS], int rows, int columns, int from, int to) {
    for (int i=0; i<rows; i++)
    {
        for (int j=0; j<columns; j++)
        {
           matrix[i][j] = getRandomValue(from, to);
        }
    }
}

void printMatrix(int matrix[][MAX_COLS], int rows, int columns) {
    for (int i=0; i<rows; i++)
    {
        for (int j=0; j<columns; j++)
        {
           cout << matrix[i][j] << " ";
        }
        cout << endl;
    }
}

void biggerNumMatrix(int m1[][MAX_COLS], int m2[][MAX_COLS], int m3[][MAX_COLS], int r3, int c3) {
    for (int i=0; i<r3; i++)
    {
        for (int j=0; j<c3; j++)
        {
           m3[i][j] = (m1[i][j] > m2[i][j] ? m1[i][j] : m2[i][j]);
        }
    }
}

int biggerSideDiagonal(int m1[][MAX_COLS], int m2[][MAX_COLS], int r1, int c1, int r2, int c2) {
    int suma1 = 0;
    int suma2 = 0;
    
    for (int i=0; i<r1; i++)
    {
        suma1 += m1[i][c1-i-1];
    }
    for (int i=0; i<r2; i++)
    {
        suma2 += m2[i][c2-i-1];
    }
    
    return suma1 > suma2 ? 1 : 2;
}

int main()
{
    srand(time(0));
    int r1 = 1, c1 = 1 , r2 = 1, c2 = 1;
    do {
		cout << "Unesite red i kolonu za 1. matricu: " << endl;
		cin >> r1 >> c1;
	} while (r1 < 1 || c1 < 1);
	do {
		cout << "Unesite broj red i kolonu za 2. matricu: " << endl;
		cin >> r2 >> c2;
	} while (r2 < 1 || c2 < 1);
	
	// kreiranje matrice m1 i postavljanje vrijednosti na 0
	int m1[MAX_ROWS][MAX_COLS] = {0};
	// kreiranje matrice m2 i postavljanje vrijednosti na 0
	int m2[MAX_ROWS][MAX_ROWS] = {0};

	// randomizacija vrijednosti
	int from = 1, to = 15;
	setRandomValues(m1, r1, c1, from, to);
	setRandomValues(m2, r2, c2, from, to);

	// printanje prve matrice
	cout << "Matrica M1: " << endl;
	printMatrix(m1, r1, c1);
	cout << "Matrica M2: " << endl;
	printMatrix(m2, r2, c2);
	cout << endl;

	// kreiranje matrice m3 i postavljanje vrijednosti na 0
	int m3[MAX_ROWS][MAX_ROWS] = {0};

    int r3 = (r1 > r2 ? r1 : r2);
	int c3 = (c1 > c2 ? c1 : c2);

	biggerNumMatrix(m1, m2, m3, r3, c3);

	cout << "Matrica M3 formirana sumiranjem brojeva matrica m1 i m2: " << endl;
	printMatrix(m3, r3, c3);
	if (r1 == c1 && r2 == c2)
	{
		cout << "Matrica sa vecom sumom sporedne dijagonale je: " << biggerSideDiagonal(m1, m2, r1, c1, r2, c2) << ". matrica";
	}
	else
	{
		cout << "Broj kolona i redova nije jednak kod obe matrice." << endl;
	}
    
    return 0;
}